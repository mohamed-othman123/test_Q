@use 'variables';
@use 'mixins';

:host {
  .media-section {
    background: white;
    padding: 2rem;
    border-radius: variables.$rounded-md;
    margin-bottom: 1.5rem;
    border: 1px solid variables.$primary-color;

    .header-container {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1.5rem;
      padding-bottom: 1rem;
      border-bottom: 1px solid variables.$border-color;

      h4 {
        margin: 0;
        font-size: 1.25rem;
        font-weight: 500;
        color: #1f2937;
      }

      button {
        max-width: fit-content;
      }
    }

    h5 {
      font-size: 1rem;
      font-weight: 500;
      color: #374151;
      margin-bottom: 0.5rem;
    }

    .helper-text {
      color: #6b7280;
      font-size: 0.875rem;
      margin-bottom: 1rem;
    }
  }

  .media-container {
    margin-bottom: variables.$space-4xl;

    &:last-child {
      margin-bottom: 0;
    }
  }

  .media-grid {
    display: grid;
    gap: variables.$space-xl;
    margin-bottom: variables.$space-2xl;
    min-height: 150px;

    &.banners-grid {
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    }

    &.images-grid {
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
      @media (min-width: 768px) {
        grid-template-columns: repeat(3, 1fr);
      }
    }
  }

  .media-item {
    position: relative;
    aspect-ratio: 16/9;
    border-radius: variables.$rounded-sm;
    overflow: hidden;
    background: variables.$light-gray;
    border: 1px solid variables.$border-color;
    transition: transform 0.2s ease, box-shadow 0.2s ease;

    &:hover {
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    img.preview-image {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    // Order Dropdown styling
    .order-select {
      position: absolute;
      bottom: variables.$space-sm;
      right: variables.$space-sm;
      width: 120px;
      z-index: 3;

      ::ng-deep {
        .p-dropdown {
          width: 100%;
          background: rgba(255, 255, 255, 0.95);
          border: 1px solid variables.$border-color;
          font-size: 0.875rem;
          transition: all 0.2s ease;

          &:not(.p-disabled):hover {
            border-color: variables.$primary-color;
          }

          &:not(.p-disabled).p-focus {
            border-color: variables.$primary-color;
            box-shadow: 0 0 0 2px rgba(variables.$primary-color, 0.2);
          }

          .p-dropdown-label {
            padding: 0.4rem 0.8rem;
          }

          .p-dropdown-trigger {
            width: 2rem;
            padding: 0;

            .p-dropdown-trigger-icon {
              font-size: 0.875rem;
            }
          }
        }

        .p-dropdown-panel {
          .p-dropdown-items {
            padding: variables.$space-sm 0;

            .p-dropdown-item {
              padding: 0.5rem 1rem;
              font-size: 0.875rem;

              &:hover {
                background: rgba(variables.$primary-color, 0.1);
              }

              &.p-highlight {
                background: variables.$primary-color;
                color: white;
              }
            }
          }
        }
      }
    }
  }

  .remove-button {
    position: absolute;
    top: variables.$space-sm;
    right: variables.$space-sm;
    width: 24px;
    height: 24px;
    border-radius: variables.$rounded-full;
    background: rgba(0, 0, 0, 0.5);
    border: none;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 3;
    transition: background 0.3s ease;

    &:hover {
      background: rgba(0, 0, 0, 0.7);
    }

    &:disabled {
      opacity: 0.5;
      cursor: not-allowed;
    }

    i {
      font-size: 0.75rem;
    }
  }

  .upload-box {
    position: relative;
    width: 100%;
    height: 100%;
    border: 2px dashed variables.$border-color;
    border-radius: variables.$rounded-sm;
    transition: all 0.3s ease;

    &:hover {
      border-color: variables.$primary-color;
    }

    &.has-file {
      border-style: solid;
    }

    input[type='file'] {
      display: none;
    }

    .upload-label {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      width: 100%;
      height: 100%;
      cursor: pointer;
      padding: variables.$space-md;
      text-align: center;

      i {
        font-size: 1.5rem;
        color: #9ca3af;
        margin-bottom: variables.$space-md;
        transition: all 0.2s ease;
      }

      span {
        color: #6b7280;
        font-size: 0.875rem;
      }

      &:hover i {
        color: variables.$primary-color;
        transform: translateY(-2px);
      }
    }

    .upload-overlay {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(255, 255, 255, 0.8);
      backdrop-filter: blur(2px);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 4;
    }
  }

  .add-media-button {
    width: 100%;
    height: 100%;
    min-height: 120px;
    border: 2px dashed variables.$border-color;
    border-radius: variables.$rounded-sm;
    background: transparent;
    color: #6b7280;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;

    i {
      font-size: 1.5rem;
      margin-bottom: variables.$space-md;
      transition: transform 0.2s ease;
    }

    &:hover {
      border-color: variables.$primary-color;
      color: variables.$primary-color;

      i {
        transform: translateY(-2px);
      }
    }
  }

  // RTL Support
  [dir="rtl"] & {
    .order-select {
      right: auto;
      left: variables.$space-sm;
    }

    .remove-button {
      right: auto;
      left: variables.$space-sm;
    }
  }

  @media (max-width: 768px) {
    .media-section {
      padding: 1rem;
    }

    .media-grid {
      gap: variables.$space-md;
    }

    .order-select {
      width: 100px;
    }
  }

  ::ng-deep .p-progress-spinner {
    .p-progress-spinner-circle {
      stroke: variables.$primary-color;
      animation: progress-spinner-dash 1.5s ease-in-out infinite;
    }
  }

  @keyframes progress-spinner-dash {
    0% {
      stroke-dasharray: 1, 200;
      stroke-dashoffset: 0;
    }
    50% {
      stroke-dasharray: 89, 200;
      stroke-dashoffset: -35px;
    }
    100% {
      stroke-dasharray: 89, 200;
      stroke-dashoffset: -124px;
    }
  }
}
